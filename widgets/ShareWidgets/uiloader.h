
/*
 * share-ui -- Handset UX Share user interface
 * Copyright (c) 2010-2011 Nokia Corporation and/or its subsidiary(-ies).
 * Contact: Jukka Tiihonen <jukka.tiihonen@nokia.com>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU Lesser General Public License,
 * version 2.1, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
 * more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
 */

#ifndef _SHARE_WIDGETS_UI_LOADER_H_
#define _SHARE_WIDGETS_UI_LOADER_H_

#include <QObject>
#include <QApplication>

namespace ShareUI {
    class ItemContainer;
    class PluginLoader;
}

namespace ShareWidgets {

    class UiLoaderPrivate;

    /*!
      \class UiLoader
      \brief Plugin loader for Share UI implementations
     */
    class UiLoader : public QObject {
    Q_OBJECT
    public:
        /*!
          \brief Consturctor
          \param parent QObject parent
         */
        UiLoader (QObject * parent = 0);
        virtual ~UiLoader ();

        /*!
          \brief Set the path for the plugin loader and load the plugin
          \param pPath Path where the plugin can be found. If no path is passed
                 (i.e empty string argument), then the function looks at a
                 hard-coded location. By default, empty string is passed as
                 argument
          \return <code>true</code> if the plugin was loaded successfully, else
                  <code>false</code>
         */
        bool loadPlugin (QString pPath = QString ());

        /*!
          \brief Get the application instance pointer from the plugin. This
                 function should be called only after loadPlugin has been
                 called successfully.
          \param argc Reference to the argc passed to the main function -
                 integer value containing the number of arguments passed to the
                 application. 
                 PLEASE NOTE: Always use reference - some implementations of
                 QCoreApplication store reference to the argc, and if pass by
                 value is done, then that can result in a crash when argc is
                 accessed later, since the reference will be to some location
                 on stack whose value has changed since
          \param argv Arguments passed to the application
          \return Application generated by plugin or null if plugin failed to
                  load.
         */
        QApplication * application (int & argc, char ** argv);
        
         
        /*!
          \brief Show the sharing UI
          \param pluginLoader Pluginloader with loaded methods
          \param container Container with content to be shared
          \return <code>true</code> if the UI presentation succeeded, else
                  <code>false</code>
         */
        bool showUI (ShareUI::PluginLoader * pluginLoader,
            ShareUI::ItemContainer * container);
                        
    private:
        Q_DISABLE_COPY (UiLoader)
        UiLoaderPrivate * const d_ptr; //!< Private data
    };
}

#endif
